% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/see_spatial.R
\name{see_spatial}
\alias{see_spatial}
\title{get spatial (sf, sp, RasterLayer) objects in memory as character vector, like see_sf but includes sp and RasaterLayer types, too}
\usage{
see_spatial(env = rlang::caller_env())
}
\value{
a character vector
}
\description{
get spatial (sf, sp, RasterLayer) objects in memory as character vector, like see_sf but includes sp and RasaterLayer types, too
}
\examples{
# These examples only work when copy/pasted into the console since they refer to your environment
see_spatial()            # nothing
library(spData)          # load a few datasets from the spData package
data(alaska)                                                                     # sf data
data(house)                                                                      # sp data
(elev <- system.file("raster/elev.tif", package = "spData") |> raster::raster()) # RasterLayer data
see_spatial()            # returns alaska, house, elev
see_sf()                 # character string of sf objects, only alaska here
}
\seealso{
\code{\link[=see_sf]{see_sf()}} is like see_spatial but only returns sf objects, \code{\link[=get_crs]{get_crs()}} reports the coordinate reference system, it follows see_sf and see_spatial nicely
}
